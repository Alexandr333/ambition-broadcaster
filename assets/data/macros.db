{"name":"Draw from: Слухи Шаффенфест","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('zZSf8XYJG6eu9EFd');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"03BMc9uIk4aoVCKt"}
{"name":"Draw from: Откуда я тебя знаю?","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('F1pQpcy1DTMlsIiJ');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"0L9AYEHMLeF6h6GA"}
{"name":"Draw from: Зоны попадания","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('zRpXGjimt56taWH8');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"31ABbc2QFX1hoZSh"}
{"_id":"4BuVaAol1KSphLI9","name":"Add XP","type":"script","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/bazaar/modules/wfrp4e-gm-toolkit/assets/assets/icons/add-xp.svg","scope":"global","command":"addXP();\n\nasync function addXP() {\n  // setup: determine group of actors to be awarded experience\n  if (game.user.targets.size < 1) {\n    // (1) all player characters if no tokens are selected\n    awardees = Array.from(game.actors).filter(pc => pc.hasPlayerOwner && pc.type == \"character\");\n  } else {\n    // (2) otherwise, all targeted player character tokens\n    awardees = Array.from(game.user.targets).filter(pc => pc.actor.hasPlayerOwner && pc.actor.type == \"character\");\n  }\n\n  // setup: exit with notice if there are no player-owned characters\n  if (awardees.length < 1) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Token.TargetPCs\"), {});\n\n  selectedAwardees = awardees.slice();\n\n  // Get  session ID/date, default XP award and default reason\n  let XP = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultAmount\"))\n  let reason = (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\"))\n  if (reason == \"null\") {\n    reason = \"\"\n  } else {\n    reason = (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\")) \n    let session = game.gmtoolkit.utility.getSession()\n    reason = reason.replace(\"%date%\", session.date)\n    if (session.id != \"null\" ) reason = reason.replace(\"%session%\", session.id)\n  }\n\n  // Prompt for XP if option is set\n  if (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPPrompt\")) {\n    // nobody selected by default\n    selectedAwardees = [];\n    let handleActorsListInteraction = (html) => {\n      html.find('input.actor_checkbox').each((ind, el) => {\n        const isSelected = !!selectedAwardees.find(a => {\n          return (a?.actor?.name || a.name) === el.id;\n        });\n        el.checked = isSelected;\n      });\n      html.find('button.select_all').each((ind, el) => {\n        const isAllSelected = selectedAwardees.length === awardees.length;\n        el.innerText = !isAllSelected ? 'Select All' : 'Deselect All';\n        el.style.color = '#ffffff'\n\n        html.find('li.actor').each((ind, el) => {\n          const isSelected = !!selectedAwardees.find(a => {\n            return (a?.actor?.name || a.name) === el.dataset.actor;\n          });\n          if (isSelected) {\n            el.style.color = '#88c29b';\n          } else {\n            el.style.color = '#ffffff';\n          }\n        });\n\n        html.find('input.actor_checkbox').each((ind, el) => {\n          const isSelected = !!selectedAwardees.find(a => {\n            return (a?.actor?.name || a.name) === el.id;\n          });\n          el.checked = isSelected;\n        });\n      });\n\n      html.on('click', 'button.select_all', (e) => {\n          const el = e.currentTarget;\n          const isAllSelected = selectedAwardees.length === awardees.length;\n          selectedAwardees = isAllSelected  ? [] : awardees.slice();\n          el.innerText = !isAllSelected ? 'Deselect All' : 'Select All';\n  \n          html.find('li.actor').each((ind, el) => {\n            const isSelected = !!selectedAwardees.find(a => {\n              return (a?.actor?.name || a.name) === el.dataset.actor;\n            });\n            if (isSelected) {\n              el.style.color = '#88c29b';\n            } else {\n              el.style.color = '#ffffff';\n            }\n          });\n  \n          html.find('input.actor_checkbox').each((ind, el) => {\n            const isSelected = !!selectedAwardees.find(a => {\n              return (a?.actor?.name || a.name) === el.id;\n            });\n            el.checked = isSelected;\n          });\n      })\n\n      html.on('click', 'li.actor', (e) => {\n        const isSelected = !!selectedAwardees.find(a => {\n          return (a?.actor?.name || a.name) === e.currentTarget.dataset.actor;\n        });\n        if (isSelected) {\n          e.currentTarget.style.color = '#ffffff';\n          selectedAwardees = selectedAwardees.filter(a => {\n            return (a?.actor?.name || a.name) !== e.currentTarget.dataset.actor;\n          });\n        } else {\n          e.currentTarget.style.color = '#88c29b';\n          const selectedAwardee = awardees.find(a => {\n            return (a?.actor?.name || a.name) === e.currentTarget.dataset.actor;\n          });\n          selectedAwardee ? selectedAwardees.push(selectedAwardee) : ''\n        }\n        html.find('input.actor_checkbox').each((ind, el) => {\n          const isSelected = !!selectedAwardees.find(a => {\n            return (a?.actor?.name || a.name) === el.id;\n          });\n          el.checked = isSelected;\n        });\n        html.find('button.select_all').each((ind, el) => {\n          const isAllSelected = selectedAwardees.length === awardees.length;\n          el.innerText = !isAllSelected ? 'Select All' : 'Deselect All';\n        });\n      });\n    };\n    let awardeeList = \"<ul>\"\n    awardees.forEach (pc => {\n      awardeeList +=  `<li class='actor' data-actor='${pc?.actor?.name || pc.name}'>\n        <input type=\"checkbox\" checked=\"false\" class='actor_checkbox' id='${pc?.actor?.name || pc.name}'>${pc?.actor?.name || pc.name}\n      </li>` \n    })\n    awardeeList += \"</ul>\"\n    const dialog = new Dialog({\n      title: (game.i18n.localize('GMTOOLKIT.Dialog.AddXP.Title')),\n      content: `<form>\n              <button class='select_all'></button>\n              <p>${game.i18n.format(\"GMTOOLKIT.Dialog.AddXP.Recipients\", {recipients : awardeeList})}</p>\n              <div class=\"form-group\">\n                <label>${game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Prompt\")}</label> \n                <input type=\"text\" id=\"add-xp\" name=\"add-xp\" value=\"${XP}\" />\n              </div>\n              <div class=\"form-group\">\n                <label>${game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Reason\")}</label> \n                <input type=\"text\" id=\"xp-reason\" name=\"xp-reason\" value=\"${reason}\" />\n              </div>\n          </form>`,\n      buttons: {\n        yes: {\n          icon: \"<i class='fas fa-check'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Apply\"),\n          callback: (html) => {\n            let XP = Math.round(html.find('#add-xp').val());\n            if (isNaN(XP)) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.InvalidXP\"))\n            let reason =  html.find('#xp-reason').val();\n            updateXP(selectedAwardees, XP, reason);\n          }\n        },\n        no: {\n          icon: \"<i class='fas fa-times'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"),\n        },\n      },\n      default: \"yes\",\n      render: handleActorsListInteraction,\n  }).render(true);\n  } else {\n    updateXP(awardees, XP, reason)\n  }\n\n} // END: addXP\n\nfunction updateXP(awardees, XP, reason) {\n  let chatContent = \"\"\n  const isDefined = (v) => { return v !== undefined && v !== null && v!== NaN}\n\n  // cycle through player characters, gathering experience change data for report message\n  awardees.forEach ( pc  => {\n    recipient = pc?.actor?.name || pc.name \n    XPTotal = isDefined(pc?.details?.experience?.total) ? pc?.details?.experience?.total : pc.actor.data.data.details.experience.total; \n    newXPTotal = Math.max(XPTotal + XP,0);\n    XPCurrent = isDefined(pc?.details?.experience?.current) ? pc?.details?.experience?.current : pc.actor.data.data.details.experience.current; \n    newXPCurrent = Math.max(XPCurrent + XP,0);\n\n    // update token actor or actor\n    pc?.actor ? pc.actor.awardExp(XP, reason) : pc.awardExp(XP, reason)\n\n    // build report message \n    chatContent += game.i18n.format(\"GMTOOLKIT.AddXP.Success\", {recipient, XPTotal, newXPTotal, XPCurrent, newXPCurrent} )  \n  }); // end cycle\n  \n// confirm changes made in whisper to GM\n    let chatData = game.wfrp4e.utility.chatDataSetup(chatContent, \"gmroll\", false)\n    chatData.flavor = game.i18n.format(\"GMTOOLKIT.AddXP.Flavor\", {XP, reason})\n    ChatMessage.create(chatData, {});  \n    console.log(chatContent)\n\n} // END: updateXP\n\n\n/* ==========\n * MACRO: Add XP\n * VERSION: 0.8.0\n * UPDATED: 2021-12-30\n * DESCRIPTION: Adds a set amount of XP to all or targeted player character(s). Adds XP update note to the Chat log.\n * TIP: Characters must have a player assigned. \n * TIP: Default XP amount and reason can be preset in module settings, along with option to bypass prompt for XP amount each time.\n * TIP: Non-whole numbers are rounded off. Negative numbers are subtracted. \n ========== */","folder":null,"sort":0,"permission":{"default":0,"k5y1jEYMBqd9uLUx":3,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Compendium.wfrp4e-gm-toolkit.gm-toolkit-macros.rzKeTLKp0bOp5SK9"}}}
{"name":"Дырявые руки (Металл)","type":"script","author":"fKfTHVfvm2cHZukG","img":"https://assets.forge-vtt.com/6222007b75656e7f8319c93b/modules/wfrp4e-core/icons/spells/metal.png","scope":"global","command":"game.wfrp4e.utility.rollItemMacro(\"Дырявые руки (Металл)\", \"spell\");","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{},"_id":"9Afht4x9BJNqqBU4"}
{"name":"Reduce Advantage","type":"script","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/bazaar/modules/wfrp4e-gm-toolkit/assets/assets/icons/advantage-reduce.svg","scope":"global","command":"/* Reduces Advantage for the selected token by 1 (to minimum 0).\n*/\n\ngame.gmtoolkit.advantage.updateAdvantage(token,\"reduce\");","folder":null,"sort":0,"permission":{"default":0,"k5y1jEYMBqd9uLUx":3,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Compendium.wfrp4e-gm-toolkit.gm-toolkit-macros.2sefSFqqAbySw2nz"}},"_id":"A4EVvIlsLK0uXNZA"}
{"name":"New Macro","type":"chat","author":"k596gzoQ5fm0CJzj","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"k596gzoQ5fm0CJzj":3},"flags":{},"_id":"BfMfliklDqq3EXhX"}
{"name":"New Macro","type":"chat","author":"yrM1XFtQy6w39Rpr","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"yrM1XFtQy6w39Rpr":3},"flags":{},"_id":"FVzzQfInStCWvQ9h"}
{"name":"Add Advantage","type":"script","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/bazaar/modules/wfrp4e-gm-toolkit/assets/assets/icons/advantage-add.svg","scope":"global","command":"/* Increases Advantage for the selected token by 1.\n * Caps at character's maximum advantage. \n*/\n\ngame.gmtoolkit.advantage.updateAdvantage(token,\"increase\");","folder":null,"sort":0,"permission":{"default":0,"k5y1jEYMBqd9uLUx":3,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Compendium.wfrp4e-gm-toolkit.gm-toolkit-macros.AjUYYy7qAN55BERN"}},"_id":"G39m2uzkjXpu3QX2"}
{"name":"Precipitation Table","type":"script","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/bazaar/core/icons/svg/waterfall.svg","scope":"global","command":"const tableName = \"Precipitation\";\n\nconst title = 'Roll on Precipitation Table';\nconst content = `<center><p style=\"margin-top: -2px;\">Modifier: Summer −20, Autumn +20, Winter +0, Spring +10</p></center><input id=\"modifier\" type=\"text\" style=\"text-align: center; margin-bottom: 2px;\"></input>`\nnew Dialog({\n  title,\n  content,\n  render: (content) => {\n    $(`#modifier`).focus();\n    $(`#modifier > section > div.dialog-buttons > button`).hide();\n  },\n  buttons: { \n      roll: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: `Roll`,\n        callback: async (html) => {\n          let modifier = $(`#modifier`).val();\n          let table = game.tables.getName(tableName);\n          let roll = new Roll(`1d100 + ${modifier}`);\n          await table.draw({roll});\n        }\n      }\n  },\n  default: 'roll',\n  close:   html => {return}\n},{}).render(true);","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Macro.MiutI6w9P1t0YlOb"}},"_id":"IrsRC1RybfAdUSvI"}
{"name":"Draw from: Роковые Пророчества","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('led1vSPKcqMpS6jp');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"IvcGbFUogBYeeE3f"}
{"name":"Add XP","type":"script","author":"fKfTHVfvm2cHZukG","img":"modules/wfrp4e-gm-toolkit/assets/icons/add-xp.svg","scope":"global","command":"addXP();\n\nasync function addXP() {\n\n  // setup: determine group of actors to be awarded experience\n  let awardees = []\n  if (game.user.targets.size < 1) {\n    // (1) all player characters if no tokens are targeted\n    awardees = game.actors.filter(pc => pc.hasPlayerOwner && pc.type == \"character\");\n  } else {\n    // (2) otherwise, all targeted player character tokens\n    awardees = Array.from(game.user.targets).filter(pc => pc.actor.hasPlayerOwner && pc.actor.type == \"character\");\n  }\n\n  // setup: exit with notice if there are no player-owned characters\n  if (awardees.length < 1) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Token.TargetPCs\"), {});\n\n  // Get  session ID/date, default XP award and default reason\n  let XP = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultAmount\"))\n  let reason = (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\"))\n  if (reason == \"null\") {\n    reason = \"\"\n  } else {\n    reason = (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\")) \n    let session = game.gmtoolkit.utility.getSession()\n    reason = reason.replace(\"%date%\", session.date)\n    if (session.id != \"null\" ) reason = reason.replace(\"%session%\", session.id)\n  }\n\n  // Prompt for XP if option is set\n  if (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPPrompt\")) {\n    let awardeeList = \"<ul>\"\n    awardees.forEach (pc => {\n      awardeeList +=  `<li>${pc?.actor?.name || pc.name}</li>` \n    })\n    awardeeList += \"</ul>\"\n    const dialog = new Dialog({\n      title: (game.i18n.localize('GMTOOLKIT.Dialog.AddXP.Title')),\n      content: `<form>\n              <p>${game.i18n.format(\"GMTOOLKIT.Dialog.AddXP.Recipients\", {recipients : awardeeList})}</p>\n              <div class=\"form-group\">\n                <label>${game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Prompt\")}</label> \n                <input type=\"text\" id=\"add-xp\" name=\"add-xp\" value=\"${XP}\" />\n              </div>\n              <div class=\"form-group\">\n                <label>${game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Reason\")}</label> \n                <input type=\"text\" id=\"xp-reason\" name=\"xp-reason\" value=\"${reason}\" />\n              </div>\n          </form>`,\n      buttons: {\n        yes: {\n          icon: \"<i class='fas fa-check'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Apply\"),\n          callback: (html) => {\n            let XP = Math.round(html.find('#add-xp').val());\n            if (isNaN(XP)) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.InvalidXP\"))\n            let reason =  html.find('#xp-reason').val();\n            updateXP(awardees, XP, reason);\n          }\n        },\n        no: {\n          icon: \"<i class='fas fa-times'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"),\n        },\n      },\n      default: \"yes\"\n  }).render(true);\n  } else {\n    updateXP(awardees, XP, reason)\n  }\n\n} // END: addXP\n\nfunction updateXP(awardees, XP, reason) {\n  let chatContent = \"\"\n\n  // cycle through player characters, gathering experience change data for report message\n  awardees.forEach ( pc  => {\n    let recipient = pc?.actor?.name || pc.name \n    let XPTotal = pc?.details?.experience?.total || pc.actor.data.data.details.experience.total; \n    let newXPTotal = Math.max(XPTotal + XP,0);\n    let XPCurrent = pc?.details?.experience?.current  || pc.actor.data.data.details.experience.current; \n    let newXPCurrent = Math.max(XPCurrent + XP,0);\n\n    // update token actor or actor\n    pc?.actor ? pc.actor.awardExp(XP, reason) : pc.awardExp(XP, reason)\n\n    // build report message \n    chatContent += game.i18n.format(\"GMTOOLKIT.AddXP.Success\", {recipient, XPTotal, newXPTotal, XPCurrent, newXPCurrent} )  \n  }); // end cycle\n  \n// confirm changes made in whisper to GM\n    let chatData = game.wfrp4e.utility.chatDataSetup(chatContent, \"gmroll\", false)\n    chatData.flavor = game.i18n.format(\"GMTOOLKIT.AddXP.Flavor\", {XP, reason})\n    ChatMessage.create(chatData, {});  \n    console.log(chatContent)\n\n} // END: updateXP\n\n\n/* ==========\n * MACRO: Add XP\n * VERSION: 0.9.3\n * UPDATED: 2022-01-24\n * DESCRIPTION: Adds a set amount of XP to all or targeted player character(s). Adds XP update note to the Chat log.\n * TIP: Characters must have a player assigned. \n * TIP: Default XP amount and reason can be preset in module settings, along with option to bypass prompt for XP amount each time.\n * TIP: Non-whole numbers are rounded off. Negative numbers are subtracted. \n ========== */","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{"wfrp4e-gm-toolkit":{"version":"0.9.3"},"core":{"sourceId":"Compendium.wfrp4e-gm-toolkit.gm-toolkit-macros.rzKeTLKp0bOp5SK9"}},"_id":"KWAtzitJgYUiH1Mh"}
{"name":"New Macro","type":"chat","author":"fKfTHVfvm2cHZukG","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{},"_id":"NCuG5K9wcBnY4FMZ"}
{"_id":"NPFjp7tTAA0S8lPq","name":"Проверки","type":"script","author":"fKfTHVfvm2cHZukG","img":"icons/svg/dice-target.svg","scope":"global","command":"createDialog();\n\nasync function createDialog() {\n// === Carry out the test if you are a GM\n  if (!game.user.isUniqueGM) {\n    ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.MakeSecretPartyTest.NoPermission\"), {})\n    return;\n  };\n\n\n  //#region variables\n\n  // temp4.getActiveTokens()[0].scene.active  Check on cur scene\n  let actors = game.users.players.filter(u => u.active).map(u => u.character)\n\n  let selectedActors = [];\n  // === Set up test parameters\n  // eg, basic skill\n  // let targetTestItem = \"Stealth (Rural)\";  // eg, grouped skill\n  // let targetTestItem = \"Play (Lute)\";  // eg, advanced skill\n  let targetTestItem;\n  let predefined = [];\n  let characteristics = Object.values(game.wfrp4e.config.characteristics).map((v) => {\n    return {\n      name: v,\n      type: 'characteristic'\n    }\n  });\n  let basicSkills = await game.wfrp4e.utility.allBasicSkills();\n  basicSkills = basicSkills.map(v => {\n    return {\n      type: 'skill',\n      name: v.name\n    }\n  });\n  let items = mergeItems([predefined, characteristics, basicSkills]);\n\n  // true: to bypass roll dialog and post results directly to chat using the following default options\n  // let silentTest = false;  // false: to use the native Roll Dialog for control over talents and other modifiers/bonuses, which may vary by character; \n  let silentTest = true;\n\n  // === Set default options for silent tests (ignored for interactive tests)\n  // choose from \"gmroll\", \"blindroll\", \"selfroll\",  \"public\"\n\n  let rollMode = \"blindroll\"\n  let slBonus = 0\n  let successBonus = 0\n  // --- testModifier can be numeric or reference built-in system difficultyModifiers \n  // --- (eg, 'game.wfrp4e.config.difficultyModifiers[(\"average\")]' for +20)\n  // --- accepted difficultyModifier values are listed in the REFERENCES section below\n  // game.wfrp4e.config.difficultyModifiers[(\"average\")]\n  /* --- Accepted difficultyModifier values that can be used for testModifier\n   * \"veasy\": \"Very Easy (+60)\",\n   * \"easy\": \"Easy (+40)\",\n   * \"average\": \"Average (+20)\",\n   * \"challenging\": \"Challenging (+0)\",\n   * \"difficult\": \"Difficult (-10)\",\n   * \"hard\": \"Hard (-20)\",\n   * \"vhard\": \"Very Hard (-30)\",\n   * \"futile\": \"Futile (-40)\" // requires Enemy in Shadows module\n   * \"impossible\": \"Impossible (-50)\" // requires Enemy in Shadows module\n   */\n  let testDifficulty;\n  //#endregion variables\n\n  //#region actors list \n  function createActorsList() {\n    const createLi = () => {\n      const actorLi = actors.map(a => {\n        return `\n      <li class='actor' data-actor='${a.name}'>\n        <input type=\"checkbox\" checked=\"false\" class='actor_checkbox' data-actor='${a.name}'>${a.name}\n      </li>\n      `.trim();\n      })\n      return actorLi.join('\\n');\n    }\n    let html = `\n      <div>\n        <button class='select_all'></button>\n        <p>\n          Choose actors for blind test:\n        </p>\n        <ul>\n          ${createLi()}\n        </ul>\n      </div>\n    `\n    return html;\n  }\n\n  function setUpActorsListInteractivity($) {\n    updateLiSelection();\n    updateInputSelection();\n    initiSelectAllButton();\n    handleSelectAllClick();\n    handleLiClick();\n\n    function handleLiClick() {\n      $.on('click', 'li.actor', (e) => {\n        toggleLiSelection(e);\n        updateInputSelection();\n        setSelectAllLabel();\n      });\n    }\n\n    function handleSelectAllClick() {\n      $.on('click', 'button.select_all', (e) => {\n        const isAllCurrentlySelected = allActorsSelected();\n        selectedActors = !isAllCurrentlySelected ? actors.slice() : [];\n\n        setSelectAllLabel();\n        updateLiSelection();\n        updateInputSelection();\n      });\n    }\n\n    function initiSelectAllButton() {\n      $.find('button.select_all').each((ind, el) => {\n        el.style.color = '#ffffff';\n        setSelectAllLabel();\n      });\n    }\n\n    function setSelectAllLabel() {\n      $.find('button.select_all').each((ind, el) => {\n        el.innerText = createSelectAllText(allActorsSelected());\n      });\n    }\n\n    function toggleLiSelection(e) {\n      if (isSelected(e.currentTarget)) {\n        setLiStyle(!isSelected(e.currentTarget), e.currentTarget);\n        deselect(e.currentTarget);\n      } else {\n        setLiStyle(!isSelected(e.currentTarget), e.currentTarget);\n        select(e.currentTarget);\n      }\n    }\n\n    function select(el) {\n      const selectedActor = actors.find(a => {\n        return a.name === el.dataset.actor;\n      });\n      selectedActor ? selectedActors.push(selectedActor) : '';\n    }\n\n    function deselect(el) {\n      selectedActors = selectedActors.filter(a => {\n        return (a?.actor?.name || a.name) !== el.dataset.actor;\n      });\n    }\n\n    function allActorsSelected() {\n      return selectedActors.length === actors.length;\n    }\n\n    function createSelectAllText(isAllSelected) {\n      return isAllSelected ? 'Deselect All' : 'Select All';\n    }\n\n    function setLiStyle(isSelected, el) {\n      if (isSelected) {\n        el.style.color = '#88c29b';\n      } else {\n        el.style.color = '#ffffff';\n      }\n    }\n\n    function isSelected(el) {\n      const isSelected = !!selectedActors.find(a => {\n        return a.name === el.dataset.actor;\n      });\n\n      return isSelected;\n    }\n    function updateLiSelection(el) {\n      $.find('li.actor').each((ind, el) => {\n        setLiStyle(isSelected(el), el)\n      });\n\n    }\n    function updateInputSelection(el) {\n      $.find('input.actor_checkbox').each((ind, el) => {\n        el.checked = isSelected(el);\n      });\n    }\n  }\n\n  //#endregion actors list\n\n  //#region test items\n  function mergeItems(itemsArr) {\n    let res = [];\n    itemsArr.forEach(v => res = res.concat(v));\n\n    res = res.filter((v, i) => {\n      return i === res.findIndex(r => {\n        return r.type === v.type && r.name === v.name;\n      })\n    });\n\n    return res;\n  }\n\n\n  function createTestItemsList() {\n    function createLi() {\n      const skills = items.filter(a => a.type === 'skill');\n      const characteristics = items.filter(a => a.type === 'characteristic');\n      const skillsLi = skills.map(a => {\n        return `\n          <li class='item' data-item='${a.name}'>\n            <input type=\"radio\" name=\"item-radio\" class='item-radio' data-item='${a.name}'>${a.name}\n          </li>\n      `.trim();\n      })\n      const characteristicsLi = characteristics.map(a => {\n        return `\n          <li class='item' data-item='${a.name}'>\n            <input type=\"radio\" name=\"item-radio\" class='item-radio' data-item='${a.name}'>${a.name}\n          </li>\n      `.trim();\n      })\n      return `<h3>Skills</h3>${skillsLi.join('\\n')} <h3>Characteristics</h3> ${characteristicsLi.join('\\n')}`;\n    }\n    let html = `\n      <style>\n        .test-items-list {\n          max-height: 300px;\n          overflow: auto;\n        }\n      </style>\n      <div>\n        <p>\n          Select item to test:\n        </p>\n        <ul class=\"test-items-list\">\n          ${createLi()}\n        </ul>\n      </div>\n    `\n    return html;\n  }\n\n  function setUpItemsListInteractivity($) {\n    updateLiSelection();\n    updateInputSelection();\n    handleLiClick();\n\n    function handleLiClick() {\n      $.on('click', 'li.item', (e) => {\n        toggleLiSelection(e);\n        updateLiSelection();\n        updateInputSelection();\n      });\n    }\n\n    function toggleLiSelection(e) {\n      if (isSelected(e.currentTarget)) {\n        deselect(e.currentTarget);\n      } else {\n        select(e.currentTarget);\n      }\n    }\n\n    function select(el) {\n      targetTestItem = findItemByName(el.dataset.item);\n    }\n\n    function deselect(el) {\n      targetTestItem = undefined;\n    }\n\n    function findItemByName(name) {\n      return items.find(i => i.name === name);\n    }\n\n    function setLiStyle(isSelected, el) {\n      if (isSelected) {\n        el.style.color = '#88c29b';\n      } else {\n        el.style.color = '#ffffff';\n      }\n    }\n\n    function isSelected(el) {\n      const isSelected = el.dataset.item === targetTestItem?.name;\n\n      return isSelected;\n    }\n    function updateLiSelection(el) {\n      $.find('li.item').each((ind, el) => {\n        setLiStyle(isSelected(el), el)\n      });\n\n    }\n    function updateInputSelection(el) {\n      $.find('input.item-radio').each((ind, el) => {\n        el.checked = isSelected(el);\n      });\n    }\n  }\n  //#endregion test items\n\n  //#region difficulty\n  function createDifficultySelector() {\n    let html = `\n    <div class=\"form-group custom-select\">\n      <label>Сложность</label>\n      <select name=\"testDifficulty\" class=\"test-difficulty\">\n        <option value=\"veasy\">Элементарная (+60)</option>\n        <option value=\"easy\">Лёгкая (+40)</option>\n        <option value=\"average\">Заурядная (+20)</option>\n        <option value=\"challenging\">Серьёзная (+0)</option>\n        <option value=\"difficult\">Трудная (-10)</option>\n        <option value=\"hard\">Тяжёлая (-20)</option>\n        <option value=\"vhard\">Безумная (-30)</option>\n        <option value=\"futile\">Futile (-40)</option>\n        <option value=\"impossible\">Impossible (-50)</option>\n      </select>\n    </div>\n  `;\n\n    return html;\n  }\n  function setUpDifficultySelectorInteractivity($) {\n    initSelect();\n    handleSelectOption();\n\n    function handleSelectOption() {\n      $.on('change', 'select.test-difficulty', (e) => {\n\n        testDifficulty = e.currentTarget.value;\n      });\n    }\n\n    function initSelect() {\n      $.find('select.test-difficulty').each((ind, el) => {\n        el.value = 'average';\n        testDifficulty = 'average';\n      });\n    }\n  }\n  //#endregion difficulty\n\n  //#region party test\n\n\n  async function makeSecretPartyTest() {\n    for (let actor of selectedActors) {\n      // stack tests rather than await: cancelling a non-silent test during an await(ed) call will abandon all subsequent tests\n      let actorSkill = game.gmtoolkit.utility.hasSkill(actor, targetTestItem.name, \"silent\")\n      if (actorSkill != null || targetTestItem.type !== 'characteristic') {\n        // Roll against the skill if the actor has it ...\n        debugger\n\n        actor.setupSkill(actorSkill, {\n          bypass: silentTest,\n          absolute: {\n            difficulty: testDifficulty,\n          },\n          slBonus,\n          successBonus,\n          rollMode,\n          title: `${actorSkill.name} Test (${actor.name})`\n        }).then(setupData => {\n          actor.basicTest(setupData)\n        });\n      } else {\n        let characteristic;\n        if (targetTestItem.type === 'characteristic') {\n          characteristic = targetTestItem.name;\n        } else {\n          // ... or fallback to underlying characteristic if they don't\n          actorSkill = await game.wfrp4e.utility.findSkill(targetTestItem)\n          // TODO: optionally step-adjust the difficulty in case of fallback\n          if (actorSkill.advanced.value == \"adv\" && !game.settings.get(\"wfrp4e-gm-toolkit\", \"fallbackAdvancedSkills\")) {\n            ui.notifications.info(`${game.i18n.format(\"GMTOOLKIT.Message.MakeSecretPartyTest.AbortAdvancedSkillTest\", { character: actor.name, skill: targetTestItem })}`)\n            continue\n          }\n\n          characteristic = game.wfrp4e.config.characteristics[actorSkill.characteristic.value]\n        }\n\n        function findCharacteristicId(name) {\n          for(let entry of Object.entries(game.wfrp4e.config.characteristics)) {\n            if(entry[1] === name) return entry[0];\n          }\n        }\n\n        actor.setupCharacteristic(findCharacteristicId(characteristic), {\n          bypass: silentTest,\n          absolute: {\n            difficulty: testDifficulty,\n          },\n          slBonus,\n          successBonus,\n          rollMode,\n          title: `${characteristic} ${actorSkill?.name ? 'Test for' + actorSkill?.name : ''} (${actor.name})`\n        }).then(setupData => {\n          debugger\n          actor.basicTest(setupData)\n        });\n      }\n    }\n  }\n\n  /* ==========\n   * MACRO: Make Secret Party Test\n   * VERSION: 0.8.0\n   * UPDATED: 2021-12-31\n   * DESCRIPTION: Macro template for GMs to run secret skill tests for their party.\n   * TIP: Create copies of this macro and adjust the parameters (and title and/or icon) for different skill tests. Add them to your macro bar for one-click resolution.\n   * TIP: By default, tests are rolled blind. Right-click a test result in the chat log to show the results to players.\n   * TIP: You can use the results of a secret test in an opposed test as normal (using the double arrows in the chat log card.), such as secret Stealth v Perception tests\n   ========== */\n\n  //#endregion party test\n\n  const dialog = new Dialog({\n    title: `Скрытная проверка:`,\n    content: `\n      <style>\n        .actors-container {\n          max-height: 300px;\n          overflow: auto;\n        }\n        .party-test-container {\n          min-width: 350px;\n        }\n      </style>\n      <form>\n        <div class=\"party-test-container\">\n          <div class=\"actors-container\">\n            ${createActorsList()}\n          </div>\n          <div class=\"test-items-container\">\n            ${createTestItemsList()}\n          </div>\n          ${createDifficultySelector()}\n        <div>\n      </form>`,\n    buttons: {\n      yes: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: game.i18n.localize(\"GMTOOLKIT.Dialog.Apply\"),\n        callback: ($) => {\n          makeSecretPartyTest();\n        }\n      },\n      no: {\n        icon: \"<i class='fas fa-times'></i>\",\n        label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"),\n      },\n    },\n    default: \"yes\",\n    render: ($) => {\n      setUpItemsListInteractivity($);\n      setUpActorsListInteractivity($);\n      setUpDifficultySelectorInteractivity($);\n    },\n  }).render(true);\n\n\n  // END OF CREATE DIALOG\n}","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{}}
{"name":"Draw from: События","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('zPZbN8DOX2V1ZwWl');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"NU2jWnJsUCyvmfHR"}
{"name":"Наблюдение","type":"script","author":"fKfTHVfvm2cHZukG","img":"https://assets.forge-vtt.com/6222007b75656e7f8319c93b/modules/wfrp4e-core/art/magic/winds.webp","scope":"global","command":"game.wfrp4e.utility.rollItemMacro(\"Наблюдение\", \"spell\");","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{},"_id":"O9FcfsWfT5J1ciO8"}
{"name":"Simply d100","type":"chat","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/bazaar/modules/wfrp4e-gm-toolkit/assets/assets/icons/d100.svg","scope":"global","command":"/r 1d100","folder":null,"sort":0,"permission":{"default":0,"k5y1jEYMBqd9uLUx":3,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Compendium.wfrp4e-gm-toolkit.gm-toolkit-macros.ihMGjHFP3SdvYH2k"}},"_id":"OQiBFpFMBiTIuSbY"}
{"name":"Draw from: Мне нужна работа! - Что","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('InqkdaiCQ98h7Ddl');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"OVNkjfTIjboDf0ju"}
{"name":"Draw from: Таблица путешествий","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('VWxRayAV77touQMT');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"VIKnVSWI7Ze0R1fP"}
{"name":"Draw from: Вы сидите в таверне - что происходит?","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('daw0ilZ4akcQ7isG');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"VSRNsOsOJxcPwnpp"}
{"name":"Дротик","type":"script","author":"fKfTHVfvm2cHZukG","img":"https://assets.forge-vtt.com/6222007b75656e7f8319c93b/modules/wfrp4e-core/icons/spells/petty.png","scope":"global","command":"game.wfrp4e.utility.rollItemMacro(\"Дротик\", \"spell\");","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{},"_id":"ZlNRtALu5VFniulo"}
{"name":"Draw from: Мне нужна работа! - Кто","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('amwtR5qoZjUHKpg2');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"bk2Q4HGsTBGHuYUp"}
{"_id":"cLZqXfFQVkc6jpvM","name":"После Сессии","type":"script","author":"fKfTHVfvm2cHZukG","img":"icons/svg/dice-target.svg","scope":"global","command":"for(let user of game.users) {\n\tconst update = {\n\t\tdata: {\n\t\t\tstatus: {\n\t\t\t\tfortune: {\n\t\t\t\t\tvalue: 0,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(user.character) {\nconst fortuneLevel = user.character.itemCategories.talent.find(t => t.data.name === \"Фортуна\") ? user.character.itemCategories.talent.find(t => t.data.name === \"Фортуна\").data.data.advances.value : 0;\n\t\t\tupdate.data.status.fortune.value = user.character.data.data.status.fate.value + fortuneLevel;\nuser.character.update(update);\n\t}\n\n}","folder":null,"sort":0,"permission":{"default":3,"fKfTHVfvm2cHZukG":3},"flags":{}}
{"name":"Зачарование оружия","type":"script","author":"fKfTHVfvm2cHZukG","img":"https://assets.forge-vtt.com/6222007b75656e7f8319c93b/modules/wfrp4e-core/icons/spells/enchant-weapon.png","scope":"global","command":"game.wfrp4e.utility.rollItemMacro(\"Зачарование оружия\", \"spell\");","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{},"_id":"ilYySjS2byNtrzWI"}
{"name":"New Macro","type":"chat","author":"fKfTHVfvm2cHZukG","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{},"_id":"jUa7PzQuGNMWWulc"}
{"name":"Draw from: Мне нужна работа! - Почему","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('GuA31ySX6a0rOVt2');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"jjiCgnMCP3YFU8JC"}
{"name":"New Macro","type":"chat","author":"fKfTHVfvm2cHZukG","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"fKfTHVfvm2cHZukG":3},"flags":{},"_id":"khi2aJvNC3Muxs8p"}
{"name":"Temperature Table","type":"script","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/bazaar/core/icons/svg/sun.svg","scope":"global","command":"const tableName = \"Temperature\";\n\nconst title = 'Roll on Temperature Table';\nconst content = `<center><p style=\"margin-top: -2px;\">Modifier: Summer +20, Autumn -10, Winter -20, Spring +10</p></center><input id=\"modifier\" type=\"text\" style=\"text-align: center; margin-bottom: 2px;\"></input>`\nnew Dialog({\n  title,\n  content,\n  render: (content) => {\n    $(`#modifier`).focus();\n    $(`#modifier > section > div.dialog-buttons > button`).hide();\n  },\n  buttons: { \n      roll: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: `Roll`,\n        callback: async (html) => {\n          let modifier = $(`#modifier`).val();\n          let table = game.tables.getName(tableName);\n          let roll = new Roll(`1d100 + ${modifier}`);\n          await table.draw({roll});\n        }\n      }\n  },\n  default: 'roll',\n  close:   html => {return}\n},{}).render(true);","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Macro.A5RaQNgbsrsm1e0e"}},"_id":"lvsv8hE65VUszH9G"}
{"_id":"maJ7jEJqhY3PNYq9","name":"Обновить язык всем заклинаниям","type":"script","author":"iqUKmJKNvUmgewsy","img":"icons/svg/dice-target.svg","scope":"global","command":"game.wfrp4e.utility.findAll('spell').then(spells => {\nfor(let spell of spells) {\nspell.update({data: {\"skill\": {value: \"Язык (магический)\"}}})\n}\n})\n\nfor (actor of game.actors) {\nactor.itemCategories.spell.forEach(spell => {\nspell.update({data: {\"skill\": {value: \"Язык (магический)\"}}})\n})\n}","folder":null,"sort":0,"permission":{"default":0,"iqUKmJKNvUmgewsy":3},"flags":{}}
{"name":"Draw from: Неспокойные ветра","type":"script","author":"yyxTJavzw9jywnFx","img":"systems/wfrp4e/ui/buttons/d10.webp","scope":"global","command":"_dthDrawFromTable('cd4HUD1gqyDDRDDO');","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"pIziFTZFkKqZjNUY"}
{"_id":"tknFW1VhEO6VrATT","name":"Make Secret Party Test","type":"script","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/bazaar/modules/wfrp4e-gm-toolkit/assets/assets/icons/make-secret-party-test.svg","scope":"global","command":"// === Set up test parameters\nlet targetSkill = \"Perception\";  // eg, basic skill\n// let targetSkill = \"Stealth (Rural)\";  // eg, grouped skill\n// let targetSkill = \"Play (Lute)\";  // eg, advanced skill\n\nlet silentTest = true;  // true: to bypass roll dialog and post results directly to chat using the following default options\n// let silentTest = false;  // false: to use the native Roll Dialog for control over talents and other modifiers/bonuses, which may vary by character; \n\n// === Set default options for silent tests (ignored for interactive tests)\nlet rollMode = \"blindroll\" // choose from \"gmroll\", \"blindroll\", \"selfroll\",  \"public\"\nlet slBonus = 0\nlet successBonus = 0\nlet testModifier = +20 // game.wfrp4e.config.difficultyModifiers[(\"average\")]\n// --- testModifier can be numeric or reference built-in system difficultyModifiers \n// --- (eg, 'game.wfrp4e.config.difficultyModifiers[(\"average\")]' for +20)\n// --- accepted difficultyModifier values are listed in the REFERENCES section below\n\n// === Carry out the test if you are a GM\nif (game.user.isUniqueGM) \n    {makeSecretPartyTest(targetSkill)} \nelse \n    {ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.MakeSecretPartyTest.NoPermission\"), {})\n};\n\n// === Where the magic happens. \n\nasync function makeSecretPartyTest(targetSkill) {\n    let party = Array.from(game.actors).filter(a => a.hasPlayerOwner && a.type == \"character\");\n    for (let pc of party) {\n        // stack tests rather than await: cancelling a non-silent test during an await(ed) call will abandon all subsequent tests\n        let pcSkill = game.gmtoolkit.utility.hasSkill(pc, targetSkill, \"silent\")\n        if (pcSkill != null) { \n            // Roll against the skill if the actor has it ...\n            pc.setupSkill(pcSkill, {bypass: silentTest, testModifier, slBonus, successBonus, rollMode, title : `${pcSkill.name} Test (${pc.name})`}).then(setupData => {pc.basicTest(setupData)});\n        } else {\n            // ... or fallback to underlying characteristic if they don't\n            pcSkill = await game.wfrp4e.utility.findSkill(targetSkill)\n            // TODO: optionally step-adjust the difficulty in case of fallback\n            if (pcSkill.advanced.value == \"adv\" && !game.settings.get(\"wfrp4e-gm-toolkit\", \"fallbackAdvancedSkills\")) {\n                ui.notifications.info(`${game.i18n.format(\"GMTOOLKIT.Message.MakeSecretPartyTest.AbortAdvancedSkillTest\", {character: pc.name, skill: targetSkill})}`)\n                continue \n            }\n            let skillCharacteristic = game.wfrp4e.config.characteristics[pcSkill.characteristic.value]\n            pc.setupCharacteristic(pcSkill.characteristic.value, {bypass: silentTest, testModifier, slBonus, successBonus, rollMode, title : `${skillCharacteristic} Test for ${pcSkill.name} (${pc.name})`}).then(setupData => {pc.basicTest(setupData)});\n        }        \n    }\n}\n\n/* ==========\n * MACRO: Make Secret Party Test\n * VERSION: 0.8.0\n * UPDATED: 2021-12-31\n * DESCRIPTION: Macro template for GMs to run secret skill tests for their party. \n * TIP: Create copies of this macro and adjust the parameters (and title and/or icon) for different skill tests. Add them to your macro bar for one-click resolution. \n * TIP: By default, tests are rolled blind. Right-click a test result in the chat log to show the results to players.\n * TIP: You can use the results of a secret test in an opposed test as normal (using the double arrows in the chat log card.), such as secret Stealth v Perception tests\n ========== */\n\n/* === REFERENCES: \n* --- Accepted difficultyModifier values that can be used for testModifier\n* \"veasy\": \"Very Easy (+60)\",\n* \"easy\": \"Easy (+40)\",\n* \"average\": \"Average (+20)\",\n* \"challenging\": \"Challenging (+0)\",\n* \"difficult\": \"Difficult (-10)\",\n* \"hard\": \"Hard (-20)\",\n* \"vhard\": \"Very Hard (-30)\",\n* \"futile\": \"Futile (-40)\" // requires Enemy in Shadows module\n* \"impossible\": \"Impossible (-50)\" // requires Enemy in Shadows module\n*/","folder":null,"sort":0,"permission":{"default":3,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Macro.lQMBdQOkcPIIjfIe"}}}
{"name":"Blood Dragon Stats","type":"script","author":"yyxTJavzw9jywnFx","img":"https://assets.forge-vtt.com/6222007b75656e7f8319c93b/modules/wfrp4e-core/icons/traits/trait.png","scope":"global","command":"async function getStats() {\n  // Find the selected actor\n  let actorSelected = actor;\n  console.log(actorSelected);\n\n  // Then define the characteristic changes for this Bloodline\n  let updates = {\n\t\"data.characteristics.ws.modifier\": actorSelected.data.data.characteristics.ws.modifier += 10,\n    \"data.characteristics.bs.modifier\": actorSelected.data.data.characteristics.bs.modifier += 10,\n\t\"data.characteristics.s.modifier\": actorSelected.data.data.characteristics.s.modifier += 10,\n\t\"data.characteristics.t.modifier\": actorSelected.data.data.characteristics.t.modifier += 10,\n\t\"data.characteristics.i.modifier\": actorSelected.data.data.characteristics.i.modifier += 10,\n\t\"data.characteristics.ag.modifier\": actorSelected.data.data.characteristics.ag.modifier += 10,\n\t\"data.characteristics.wp.modifier\": actorSelected.data.data.characteristics.wp.modifier += 20,\n\t\"data.status.fate.value\": 0,\n\t\"data.status.resilience.value\": 0,\n\t\"data.details.move.value\": 6\n  };\n  \n   // Then update the actor\n  actorSelected.update(updates);\n}\n\ngetStats()","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{"core":{"sourceId":"Macro.gHvcVhtZ11tEwEyn"}},"_id":"v6qYbK8SMZ8SiTMO"}
{"name":"New Macro","type":"chat","author":"yyxTJavzw9jywnFx","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"yyxTJavzw9jywnFx":3},"flags":{},"_id":"y2Sh69JR4PO2o0BS"}
